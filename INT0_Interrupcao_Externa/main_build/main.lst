                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.4.0 #14620 (MINGW32)
                                      4 ;--------------------------------------------------------
                                      5 	.module main
                                      6 	.optsdcc -mmcs51 --model-small
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _main
                                     12 	.globl _external_interrupt_0
                                     13 	.globl _CY
                                     14 	.globl _AC
                                     15 	.globl _F0
                                     16 	.globl _RS1
                                     17 	.globl _RS0
                                     18 	.globl _OV
                                     19 	.globl _F1
                                     20 	.globl _P
                                     21 	.globl _PS
                                     22 	.globl _PT1
                                     23 	.globl _PX1
                                     24 	.globl _PT0
                                     25 	.globl _PX0
                                     26 	.globl _RD
                                     27 	.globl _WR
                                     28 	.globl _T1
                                     29 	.globl _T0
                                     30 	.globl _INT1
                                     31 	.globl _INT0
                                     32 	.globl _TXD
                                     33 	.globl _RXD
                                     34 	.globl _P3_7
                                     35 	.globl _P3_6
                                     36 	.globl _P3_5
                                     37 	.globl _P3_4
                                     38 	.globl _P3_3
                                     39 	.globl _P3_2
                                     40 	.globl _P3_1
                                     41 	.globl _P3_0
                                     42 	.globl _EA
                                     43 	.globl _ES
                                     44 	.globl _ET1
                                     45 	.globl _EX1
                                     46 	.globl _ET0
                                     47 	.globl _EX0
                                     48 	.globl _P2_7
                                     49 	.globl _P2_6
                                     50 	.globl _P2_5
                                     51 	.globl _P2_4
                                     52 	.globl _P2_3
                                     53 	.globl _P2_2
                                     54 	.globl _P2_1
                                     55 	.globl _P2_0
                                     56 	.globl _SM0
                                     57 	.globl _SM1
                                     58 	.globl _SM2
                                     59 	.globl _REN
                                     60 	.globl _TB8
                                     61 	.globl _RB8
                                     62 	.globl _TI
                                     63 	.globl _RI
                                     64 	.globl _P1_7
                                     65 	.globl _P1_6
                                     66 	.globl _P1_5
                                     67 	.globl _P1_4
                                     68 	.globl _P1_3
                                     69 	.globl _P1_2
                                     70 	.globl _P1_1
                                     71 	.globl _P1_0
                                     72 	.globl _TF1
                                     73 	.globl _TR1
                                     74 	.globl _TF0
                                     75 	.globl _TR0
                                     76 	.globl _IE1
                                     77 	.globl _IT1
                                     78 	.globl _IE0
                                     79 	.globl _IT0
                                     80 	.globl _P0_7
                                     81 	.globl _P0_6
                                     82 	.globl _P0_5
                                     83 	.globl _P0_4
                                     84 	.globl _P0_3
                                     85 	.globl _P0_2
                                     86 	.globl _P0_1
                                     87 	.globl _P0_0
                                     88 	.globl _B
                                     89 	.globl _ACC
                                     90 	.globl _PSW
                                     91 	.globl _IP
                                     92 	.globl _P3
                                     93 	.globl _IE
                                     94 	.globl _P2
                                     95 	.globl _SBUF
                                     96 	.globl _SCON
                                     97 	.globl _P1
                                     98 	.globl _TH1
                                     99 	.globl _TH0
                                    100 	.globl _TL1
                                    101 	.globl _TL0
                                    102 	.globl _TMOD
                                    103 	.globl _TCON
                                    104 	.globl _PCON
                                    105 	.globl _DPH
                                    106 	.globl _DPL
                                    107 	.globl _SP
                                    108 	.globl _P0
                                    109 	.globl _delay_ms
                                    110 ;--------------------------------------------------------
                                    111 ; special function registers
                                    112 ;--------------------------------------------------------
                                    113 	.area RSEG    (ABS,DATA)
      000000                        114 	.org 0x0000
                           000080   115 _P0	=	0x0080
                           000081   116 _SP	=	0x0081
                           000082   117 _DPL	=	0x0082
                           000083   118 _DPH	=	0x0083
                           000087   119 _PCON	=	0x0087
                           000088   120 _TCON	=	0x0088
                           000089   121 _TMOD	=	0x0089
                           00008A   122 _TL0	=	0x008a
                           00008B   123 _TL1	=	0x008b
                           00008C   124 _TH0	=	0x008c
                           00008D   125 _TH1	=	0x008d
                           000090   126 _P1	=	0x0090
                           000098   127 _SCON	=	0x0098
                           000099   128 _SBUF	=	0x0099
                           0000A0   129 _P2	=	0x00a0
                           0000A8   130 _IE	=	0x00a8
                           0000B0   131 _P3	=	0x00b0
                           0000B8   132 _IP	=	0x00b8
                           0000D0   133 _PSW	=	0x00d0
                           0000E0   134 _ACC	=	0x00e0
                           0000F0   135 _B	=	0x00f0
                                    136 ;--------------------------------------------------------
                                    137 ; special function bits
                                    138 ;--------------------------------------------------------
                                    139 	.area RSEG    (ABS,DATA)
      000000                        140 	.org 0x0000
                           000080   141 _P0_0	=	0x0080
                           000081   142 _P0_1	=	0x0081
                           000082   143 _P0_2	=	0x0082
                           000083   144 _P0_3	=	0x0083
                           000084   145 _P0_4	=	0x0084
                           000085   146 _P0_5	=	0x0085
                           000086   147 _P0_6	=	0x0086
                           000087   148 _P0_7	=	0x0087
                           000088   149 _IT0	=	0x0088
                           000089   150 _IE0	=	0x0089
                           00008A   151 _IT1	=	0x008a
                           00008B   152 _IE1	=	0x008b
                           00008C   153 _TR0	=	0x008c
                           00008D   154 _TF0	=	0x008d
                           00008E   155 _TR1	=	0x008e
                           00008F   156 _TF1	=	0x008f
                           000090   157 _P1_0	=	0x0090
                           000091   158 _P1_1	=	0x0091
                           000092   159 _P1_2	=	0x0092
                           000093   160 _P1_3	=	0x0093
                           000094   161 _P1_4	=	0x0094
                           000095   162 _P1_5	=	0x0095
                           000096   163 _P1_6	=	0x0096
                           000097   164 _P1_7	=	0x0097
                           000098   165 _RI	=	0x0098
                           000099   166 _TI	=	0x0099
                           00009A   167 _RB8	=	0x009a
                           00009B   168 _TB8	=	0x009b
                           00009C   169 _REN	=	0x009c
                           00009D   170 _SM2	=	0x009d
                           00009E   171 _SM1	=	0x009e
                           00009F   172 _SM0	=	0x009f
                           0000A0   173 _P2_0	=	0x00a0
                           0000A1   174 _P2_1	=	0x00a1
                           0000A2   175 _P2_2	=	0x00a2
                           0000A3   176 _P2_3	=	0x00a3
                           0000A4   177 _P2_4	=	0x00a4
                           0000A5   178 _P2_5	=	0x00a5
                           0000A6   179 _P2_6	=	0x00a6
                           0000A7   180 _P2_7	=	0x00a7
                           0000A8   181 _EX0	=	0x00a8
                           0000A9   182 _ET0	=	0x00a9
                           0000AA   183 _EX1	=	0x00aa
                           0000AB   184 _ET1	=	0x00ab
                           0000AC   185 _ES	=	0x00ac
                           0000AF   186 _EA	=	0x00af
                           0000B0   187 _P3_0	=	0x00b0
                           0000B1   188 _P3_1	=	0x00b1
                           0000B2   189 _P3_2	=	0x00b2
                           0000B3   190 _P3_3	=	0x00b3
                           0000B4   191 _P3_4	=	0x00b4
                           0000B5   192 _P3_5	=	0x00b5
                           0000B6   193 _P3_6	=	0x00b6
                           0000B7   194 _P3_7	=	0x00b7
                           0000B0   195 _RXD	=	0x00b0
                           0000B1   196 _TXD	=	0x00b1
                           0000B2   197 _INT0	=	0x00b2
                           0000B3   198 _INT1	=	0x00b3
                           0000B4   199 _T0	=	0x00b4
                           0000B5   200 _T1	=	0x00b5
                           0000B6   201 _WR	=	0x00b6
                           0000B7   202 _RD	=	0x00b7
                           0000B8   203 _PX0	=	0x00b8
                           0000B9   204 _PT0	=	0x00b9
                           0000BA   205 _PX1	=	0x00ba
                           0000BB   206 _PT1	=	0x00bb
                           0000BC   207 _PS	=	0x00bc
                           0000D0   208 _P	=	0x00d0
                           0000D1   209 _F1	=	0x00d1
                           0000D2   210 _OV	=	0x00d2
                           0000D3   211 _RS0	=	0x00d3
                           0000D4   212 _RS1	=	0x00d4
                           0000D5   213 _F0	=	0x00d5
                           0000D6   214 _AC	=	0x00d6
                           0000D7   215 _CY	=	0x00d7
                                    216 ;--------------------------------------------------------
                                    217 ; overlayable register banks
                                    218 ;--------------------------------------------------------
                                    219 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        220 	.ds 8
                                    221 ;--------------------------------------------------------
                                    222 ; overlayable bit register bank
                                    223 ;--------------------------------------------------------
                                    224 	.area BIT_BANK	(REL,OVR,DATA)
      000000                        225 bits:
      000000                        226 	.ds 1
                           008000   227 	b0 = bits[0]
                           008100   228 	b1 = bits[1]
                           008200   229 	b2 = bits[2]
                           008300   230 	b3 = bits[3]
                           008400   231 	b4 = bits[4]
                           008500   232 	b5 = bits[5]
                           008600   233 	b6 = bits[6]
                           008700   234 	b7 = bits[7]
                                    235 ;--------------------------------------------------------
                                    236 ; internal ram data
                                    237 ;--------------------------------------------------------
                                    238 	.area DSEG    (DATA)
                                    239 ;--------------------------------------------------------
                                    240 ; overlayable items in internal ram
                                    241 ;--------------------------------------------------------
                                    242 	.area	OSEG    (OVR,DATA)
                                    243 ;--------------------------------------------------------
                                    244 ; Stack segment in internal ram
                                    245 ;--------------------------------------------------------
                                    246 	.area SSEG
      000000                        247 __start__stack:
      000000                        248 	.ds	1
                                    249 
                                    250 ;--------------------------------------------------------
                                    251 ; indirectly addressable internal ram data
                                    252 ;--------------------------------------------------------
                                    253 	.area ISEG    (DATA)
                                    254 ;--------------------------------------------------------
                                    255 ; absolute internal ram data
                                    256 ;--------------------------------------------------------
                                    257 	.area IABS    (ABS,DATA)
                                    258 	.area IABS    (ABS,DATA)
                                    259 ;--------------------------------------------------------
                                    260 ; bit data
                                    261 ;--------------------------------------------------------
                                    262 	.area BSEG    (BIT)
                                    263 ;--------------------------------------------------------
                                    264 ; paged external ram data
                                    265 ;--------------------------------------------------------
                                    266 	.area PSEG    (PAG,XDATA)
                                    267 ;--------------------------------------------------------
                                    268 ; uninitialized external ram data
                                    269 ;--------------------------------------------------------
                                    270 	.area XSEG    (XDATA)
                                    271 ;--------------------------------------------------------
                                    272 ; absolute external ram data
                                    273 ;--------------------------------------------------------
                                    274 	.area XABS    (ABS,XDATA)
                                    275 ;--------------------------------------------------------
                                    276 ; initialized external ram data
                                    277 ;--------------------------------------------------------
                                    278 	.area XISEG   (XDATA)
                                    279 	.area HOME    (CODE)
                                    280 	.area GSINIT0 (CODE)
                                    281 	.area GSINIT1 (CODE)
                                    282 	.area GSINIT2 (CODE)
                                    283 	.area GSINIT3 (CODE)
                                    284 	.area GSINIT4 (CODE)
                                    285 	.area GSINIT5 (CODE)
                                    286 	.area GSINIT  (CODE)
                                    287 	.area GSFINAL (CODE)
                                    288 	.area CSEG    (CODE)
                                    289 ;--------------------------------------------------------
                                    290 ; interrupt vector
                                    291 ;--------------------------------------------------------
                                    292 	.area HOME    (CODE)
      000000                        293 __interrupt_vect:
      000000 02r00r00         [24]  294 	ljmp	__sdcc_gsinit_startup
      000003 02r00r00         [24]  295 	ljmp	_external_interrupt_0
                                    296 ;--------------------------------------------------------
                                    297 ; global & static initialisations
                                    298 ;--------------------------------------------------------
                                    299 	.area HOME    (CODE)
                                    300 	.area GSINIT  (CODE)
                                    301 	.area GSFINAL (CODE)
                                    302 	.area GSINIT  (CODE)
                                    303 	.globl __sdcc_gsinit_startup
                                    304 	.globl __sdcc_program_startup
                                    305 	.globl __start__stack
                                    306 	.globl __mcs51_genXINIT
                                    307 	.globl __mcs51_genXRAMCLEAR
                                    308 	.globl __mcs51_genRAMCLEAR
                                    309 	.area GSFINAL (CODE)
      000000 02r00r06         [24]  310 	ljmp	__sdcc_program_startup
                                    311 ;--------------------------------------------------------
                                    312 ; Home
                                    313 ;--------------------------------------------------------
                                    314 	.area HOME    (CODE)
                                    315 	.area HOME    (CODE)
      000006                        316 __sdcc_program_startup:
      000006 02r00r4C         [24]  317 	ljmp	_main
                                    318 ;	return from main will return to caller
                                    319 ;--------------------------------------------------------
                                    320 ; code
                                    321 ;--------------------------------------------------------
                                    322 	.area CSEG    (CODE)
                                    323 ;------------------------------------------------------------
                                    324 ;Allocation info for local variables in function 'external_interrupt_0'
                                    325 ;------------------------------------------------------------
                                    326 ;	main.c:14: void external_interrupt_0(void) __interrupt(0){
                                    327 ;	-----------------------------------------
                                    328 ;	 function external_interrupt_0
                                    329 ;	-----------------------------------------
      000000                        330 _external_interrupt_0:
                           000007   331 	ar7 = 0x07
                           000006   332 	ar6 = 0x06
                           000005   333 	ar5 = 0x05
                           000004   334 	ar4 = 0x04
                           000003   335 	ar3 = 0x03
                           000002   336 	ar2 = 0x02
                           000001   337 	ar1 = 0x01
                           000000   338 	ar0 = 0x00
      000000 C0*00            [24]  339 	push	bits
      000002 C0 E0            [24]  340 	push	acc
      000004 C0 F0            [24]  341 	push	b
      000006 C0 82            [24]  342 	push	dpl
      000008 C0 83            [24]  343 	push	dph
      00000A C0 07            [24]  344 	push	(0+7)
      00000C C0 06            [24]  345 	push	(0+6)
      00000E C0 05            [24]  346 	push	(0+5)
      000010 C0 04            [24]  347 	push	(0+4)
      000012 C0 03            [24]  348 	push	(0+3)
      000014 C0 02            [24]  349 	push	(0+2)
      000016 C0 01            [24]  350 	push	(0+1)
      000018 C0 00            [24]  351 	push	(0+0)
      00001A C0 D0            [24]  352 	push	psw
      00001C 75 D0 00         [24]  353 	mov	psw,#0x00
                                    354 ;	main.c:15: LED_INT = 1;                                // Liga o LED (P1.3)
                                    355 ;	assignBit
      00001F D2 93            [12]  356 	setb	_P1_3
                                    357 ;	main.c:16: delay_ms(500);                              // Aguarda 500ms
      000021 90 01 F4         [24]  358 	mov	dptr,#0x01f4
      000024 12r00r66         [24]  359 	lcall	_delay_ms
                                    360 ;	main.c:17: LED_INT = 0;                                // Desliga o LED (nível alto)
                                    361 ;	assignBit
      000027 C2 93            [12]  362 	clr	_P1_3
                                    363 ;	main.c:18: delay_ms(500);                              // Aguarda 500ms
      000029 90 01 F4         [24]  364 	mov	dptr,#0x01f4
      00002C 12r00r66         [24]  365 	lcall	_delay_ms
                                    366 ;	main.c:19: }
      00002F D0 D0            [24]  367 	pop	psw
      000031 D0 00            [24]  368 	pop	(0+0)
      000033 D0 01            [24]  369 	pop	(0+1)
      000035 D0 02            [24]  370 	pop	(0+2)
      000037 D0 03            [24]  371 	pop	(0+3)
      000039 D0 04            [24]  372 	pop	(0+4)
      00003B D0 05            [24]  373 	pop	(0+5)
      00003D D0 06            [24]  374 	pop	(0+6)
      00003F D0 07            [24]  375 	pop	(0+7)
      000041 D0 83            [24]  376 	pop	dph
      000043 D0 82            [24]  377 	pop	dpl
      000045 D0 F0            [24]  378 	pop	b
      000047 D0 E0            [24]  379 	pop	acc
      000049 D0*00            [24]  380 	pop	bits
      00004B 32               [24]  381 	reti
                                    382 ;------------------------------------------------------------
                                    383 ;Allocation info for local variables in function 'main'
                                    384 ;------------------------------------------------------------
                                    385 ;	main.c:21: void main(void){
                                    386 ;	-----------------------------------------
                                    387 ;	 function main
                                    388 ;	-----------------------------------------
      00004C                        389 _main:
                                    390 ;	main.c:22: IT0 = 1;                                    // Configura a interrupção INT0 para ser sensível à borda de descida
                                    391 ;	assignBit
      00004C D2 88            [12]  392 	setb	_IT0
                                    393 ;	main.c:23: EX0 = 1;                                    // Habilita a interrupção externa INT0
                                    394 ;	assignBit
      00004E D2 A8            [12]  395 	setb	_EX0
                                    396 ;	main.c:24: EA = 1;                                     // Habilita todas as interrupções
                                    397 ;	assignBit
      000050 D2 AF            [12]  398 	setb	_EA
                                    399 ;	main.c:26: LED_INT = 0;                                // Inicialmente desliga o LED (P1.3)
                                    400 ;	assignBit
      000052 C2 93            [12]  401 	clr	_P1_3
                                    402 ;	main.c:28: while (1){
      000054                        403 00102$:
                                    404 ;	main.c:29: BOARDLED = 0;                           // Liga o LED (nível baixo)
                                    405 ;	assignBit
      000054 C2 92            [12]  406 	clr	_P1_2
                                    407 ;	main.c:30: delay_ms(500);                          // Aguarda 500ms
      000056 90 01 F4         [24]  408 	mov	dptr,#0x01f4
      000059 12r00r66         [24]  409 	lcall	_delay_ms
                                    410 ;	main.c:31: BOARDLED = 1;                           // Desliga o LED (nível alto)
                                    411 ;	assignBit
      00005C D2 92            [12]  412 	setb	_P1_2
                                    413 ;	main.c:32: delay_ms(500);                          // Aguarda 500ms
      00005E 90 01 F4         [24]  414 	mov	dptr,#0x01f4
      000061 12r00r66         [24]  415 	lcall	_delay_ms
                                    416 ;	main.c:34: }
      000064 80 EE            [24]  417 	sjmp	00102$
                                    418 ;------------------------------------------------------------
                                    419 ;Allocation info for local variables in function 'delay_ms'
                                    420 ;------------------------------------------------------------
                                    421 ;time                      Allocated to registers r6 r7 
                                    422 ;i                         Allocated to registers r4 r5 
                                    423 ;j                         Allocated to registers r2 r3 
                                    424 ;------------------------------------------------------------
                                    425 ;	main.c:36: void delay_ms(unsigned int time){
                                    426 ;	-----------------------------------------
                                    427 ;	 function delay_ms
                                    428 ;	-----------------------------------------
      000066                        429 _delay_ms:
      000066 AE 82            [24]  430 	mov	r6, dpl
      000068 AF 83            [24]  431 	mov	r7, dph
                                    432 ;	main.c:38: for (i = 0; i < time; i++)
      00006A 7C 00            [12]  433 	mov	r4,#0x00
      00006C 7D 00            [12]  434 	mov	r5,#0x00
      00006E                        435 00107$:
      00006E C3               [12]  436 	clr	c
      00006F EC               [12]  437 	mov	a,r4
      000070 9E               [12]  438 	subb	a,r6
      000071 ED               [12]  439 	mov	a,r5
      000072 9F               [12]  440 	subb	a,r7
      000073 50 14            [24]  441 	jnc	00109$
                                    442 ;	main.c:39: for (j = 0; j < 140; j++);              // Aproximadamente 1ms
      000075 7A 8C            [12]  443 	mov	r2,#0x8c
      000077 7B 00            [12]  444 	mov	r3,#0x00
      000079                        445 00105$:
      000079 1A               [12]  446 	dec	r2
      00007A BA FF 01         [24]  447 	cjne	r2,#0xff,00138$
      00007D 1B               [12]  448 	dec	r3
      00007E                        449 00138$:
      00007E EA               [12]  450 	mov	a,r2
      00007F 4B               [12]  451 	orl	a,r3
      000080 70 F7            [24]  452 	jnz	00105$
                                    453 ;	main.c:38: for (i = 0; i < time; i++)
      000082 0C               [12]  454 	inc	r4
      000083 BC 00 E8         [24]  455 	cjne	r4,#0x00,00107$
      000086 0D               [12]  456 	inc	r5
      000087 80 E5            [24]  457 	sjmp	00107$
      000089                        458 00109$:
                                    459 ;	main.c:40: }
      000089 22               [24]  460 	ret
                                    461 	.area CSEG    (CODE)
                                    462 	.area CONST   (CODE)
                                    463 	.area XINIT   (CODE)
                                    464 	.area CABS    (ABS,CODE)
